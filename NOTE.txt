1. For every project we want to create a conda environment for best practice 
    to create the environment we can use this command : conda create environment_name python==3.7 -y
    Here we giving y because after download tehat will automatically install the environment 

    QUESTION: find out how the environment downloaded in current folder

2. Also we have to create the Requirement.txt file to hold the library that needed by the project 
    then we can use command: pip install -r requirements.txt , install the package that we mentioned there 
    to the same environment 

3. we can use the gitignore to what are the file that we dont need to push into the repository 

Erro_NOTE*
        The jupytenote file got not able to run in the VSCODE, have to look at why 

4. The flask application is to create api to handle the model that we created, there 
    (For the appplication the default page was displayed for initial page)
            i. importing the model 
            ii. then we creating  an api that accepting the post request (so we have to send a data to this api to test)
            iii. inside we transform/scalling the data with the file pikcle the scaller from the sklearn
            iv. then i scalled the data and pass to the predict method that called by the pickled model
            v. the result  is jsonized and return from the api 

5. Now the step is to deploy the app into heroku plateform, for this we 
            i. procfile is a file to specif some commands that needed to execute by the application so as 
                it is start 

            gunicorn: the allows entier python application in amazing way, it create multiple python processors 
            based on the number of requests client is putting and it distribute the enire through multiple instance 


            And when we deploy this into heroku that will understand the filse and install the needed this on 
            the instance 

6. CICD piepline: this means when the commits happen to git deployment will auomatically happen so as possible 

7. Docarize the project and run it as docarize container, dockers bassically saves lot of time wit respect to 
    configuration setups and all (becasue entier cinfiguration is basically made within a docker image and that
    can be run as container anywhere: with any operating system or something cloud server where ever you want you 
    can basically do it)


Important NOTE*  : why we careting docker image and container

    lets take we building project with various configuration, dipendency and also our environment that we used to create the project
    then we running it successfully, but when the project this project wanted to be run in differnt machine the conffiguration and the set 
    should be done manually, this will be painfull process so the docker is prevent from that and save the time for us  